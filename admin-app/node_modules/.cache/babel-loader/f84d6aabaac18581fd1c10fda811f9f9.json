{"ast":null,"code":"var _jsxFileName = \"/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/components/container/category/Category.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategory, addCategory, updateCategories, deleteCategories as deleteCategoriesAction } from '../../../actions/actions';\nimport Input from '../../UI/input/Input.ui';\nimport NewModal from '../../UI/modal/modal';\nimport Layout from '../../layouts/header.layout';\nimport CheckboxTree from 'react-checkbox-tree';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport { IoCheckbox, IoArrowDown, IoArrowForward } from 'react-icons/io5';\nimport { IoIosCheckboxOutline } from 'react-icons/io';\nimport UpdateCategoriesModal from './CategoryComponents.js/UpdateCategoryModal';\nimport AddCategoryModal from './CategoryComponents.js/AddCategoryModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n  const category = useSelector(state => state.category);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryPicture', categoryImage);\n    dispatch(addCategory(form)); // window.location.reload(false)\n\n    setCategoryName('');\n    setParentCategoryId(''); // const cat = {\n    //   categoryName,\n    //   parentCategoryId,\n    //   categoryImage,\n    // }\n    // console.log(cat)\n\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    updateCheckedExpandedCategories();\n    setUpdateCategoryModal(true);\n  };\n\n  const updateCheckedExpandedCategories = () => {\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId === category.value); //there is maybe a change a catgeory won't match, so just for safety we will have to do this\n\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId === category.value); //there is maybe a change a catgeory won't match, so just for safety we will have to do this\n\n      category && expandedArray.push(category);\n    }); //these two will help to modify the inputs in edit category\n\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type == 'checked') {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type == 'expanded') {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  {\n    /* Edit Categories */\n  }\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n    expandedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : '');\n      form.append('type', item.type);\n    });\n    checkedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : '');\n      form.append('type', item.type);\n    });\n    dispatch(updateCategories(form)).then(result => {\n      if (result) {\n        dispatch(getAllCategory());\n      }\n    });\n    setUpdateCategoryModal(false);\n  };\n\n  const deleteCategory = () => {\n    updateCheckedExpandedCategories();\n    setDeleteCategoryModal(true);\n  };\n\n  const deleteCategories = () => {\n    //get expandedCategory id\n    const expandedByIdArray = expandedArray.map((item, index) => ({\n      _id: item.value\n    })); //get checkedCategory id\n\n    const checkedByIdArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    })); //merge the checked and expanded arrays by id\n\n    const arrayByIds = expandedByIdArray.concat(checkedByIdArray);\n\n    if (checkedArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedArray)).then(result => {\n        if (result) {\n          dispatch(getAllCategory());\n          setDeleteCategoryModal(false);\n        }\n      });\n    }\n  };\n\n  const renderDeleteCategoryModal = () => {\n    // console.log('delete', checkedArray)\n    return /*#__PURE__*/_jsxDEV(NewModal, {\n      modalTitle: \"Confirm\",\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: 'No',\n        color: 'primary',\n        onClick: () => {\n          alert('no');\n        }\n      }, {\n        label: 'Yes',\n        color: 'danger',\n        onClick: deleteCategories\n      }],\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Expanded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  }; // const renderAddCategoryModal = () => {\n  //   return (\n  //     <NewModal\n  //       show={show}\n  //       handleClose={handleClose}\n  //       modalTitle={'Add New Category'}\n  //     >\n  //       <Input\n  //         value={categoryName}\n  //         placeholder={'Category Name'}\n  //         onChange={(e) => setCategoryName(e.target.value)}\n  //       />\n  //       <select\n  //         className=\"form-control\"\n  //         value={parentCategoryId}\n  //         onChange={(e) => setParentCategoryId(e.target.value)}\n  //       >\n  //         <option>select category</option>\n  //         {createCategoryList(category.categories).map((option) => (\n  //           <option key={option.value} value={option.value}>\n  //             {option.name}\n  //           </option>\n  //         ))}\n  //       </select>\n  //       <input\n  //         type=\"file\"\n  //         name=\"categoryImage\"\n  //         onChange={handleCategoryImage}\n  //       ></input>\n  //     </NewModal>\n  //   )\n  // }\n\n\n  const categoryList = createCategoryList(category.categories);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      sidebar: true,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleShow,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n              nodes: renderCategories(category.categories),\n              checked: checked,\n              expanded: expanded,\n              onCheck: checked => setChecked(checked),\n              onExpand: expanded => setExpanded(expanded),\n              icons: {\n                check: /*#__PURE__*/_jsxDEV(IoCheckbox, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 26\n                }, this),\n                uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 28\n                }, this),\n                halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 30\n                }, this),\n                expandClose: /*#__PURE__*/_jsxDEV(IoArrowForward, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 32\n                }, this),\n                expandOpen: /*#__PURE__*/_jsxDEV(IoArrowDown, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 31\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: deleteCategory,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: updateCategory,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddCategoryModal, {\n        show: show,\n        handleClose: handleClose,\n        modalTitle: 'Add New Category',\n        categoryName: categoryName,\n        setCategoryName: setCategoryName,\n        parentCategoryId: parentCategoryId,\n        setParentCategoryId: setParentCategoryId,\n        categoryList: categoryList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UpdateCategoriesModal, {\n        show: updateCategoryModal,\n        handleClose: updateCategoriesForm,\n        modalTitle: 'Update Categories',\n        size: \"lg\",\n        expandedArray: expandedArray,\n        checkedArray: checkedArray,\n        handleCategoryInput: handleCategoryInput,\n        categoryList: categoryList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), renderDeleteCategoryModal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"KqvShNLTgyl7jSKsVIkANTFRqo4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/components/container/category/Category.js"],"names":["React","useState","Col","Container","Row","useDispatch","useSelector","getAllCategory","addCategory","updateCategories","deleteCategories","deleteCategoriesAction","Input","NewModal","Layout","CheckboxTree","IoCheckbox","IoArrowDown","IoArrowForward","IoIosCheckboxOutline","UpdateCategoriesModal","AddCategoryModal","Category","props","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","updateCategoryModal","setUpdateCategoryModal","show","setShow","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","deleteCategoryModal","setDeleteCategoryModal","category","state","dispatch","handleClose","form","FormData","append","handleShow","renderCategories","categories","myCategories","push","label","name","value","_id","children","length","createCategoryList","options","parentId","type","handleCategoryImage","e","target","files","updateCategory","updateCheckedExpandedCategories","forEach","categoryId","index","find","_index","handleCategoryInput","key","updatedCheckedArray","map","item","updatedExpandedArray","updateCategoriesForm","then","result","deleteCategory","expandedByIdArray","checkedByIdArray","arrayByIds","concat","renderDeleteCategoryModal","color","onClick","alert","categoryList","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getAllCategory,\n  addCategory,\n  updateCategories,\n  deleteCategories as deleteCategoriesAction,\n} from '../../../actions/actions'\nimport Input from '../../UI/input/Input.ui'\nimport NewModal from '../../UI/modal/modal'\nimport Layout from '../../layouts/header.layout'\nimport CheckboxTree from 'react-checkbox-tree'\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css'\nimport { IoCheckbox, IoArrowDown, IoArrowForward } from 'react-icons/io5'\n\nimport { IoIosCheckboxOutline } from 'react-icons/io'\nimport UpdateCategoriesModal from './CategoryComponents.js/UpdateCategoryModal'\nimport AddCategoryModal from './CategoryComponents.js/AddCategoryModal'\n\nconst Category = (props) => {\n  const [categoryName, setCategoryName] = useState('')\n  const [parentCategoryId, setParentCategoryId] = useState('')\n  const [categoryImage, setCategoryImage] = useState('')\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false)\n  const [show, setShow] = useState(false)\n\n  const [checked, setChecked] = useState([])\n  const [expanded, setExpanded] = useState([])\n\n  const [checkedArray, setCheckedArray] = useState([])\n  const [expandedArray, setExpandedArray] = useState([])\n\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false)\n\n  const category = useSelector((state) => state.category)\n  const dispatch = useDispatch()\n\n  const handleClose = () => {\n    const form = new FormData()\n\n    form.append('name', categoryName)\n    form.append('parentId', parentCategoryId)\n    form.append('categoryPicture', categoryImage)\n    dispatch(addCategory(form))\n    // window.location.reload(false)\n    setCategoryName('')\n    setParentCategoryId('')\n    // const cat = {\n    //   categoryName,\n    //   parentCategoryId,\n    //   categoryImage,\n    // }\n\n    // console.log(cat)\n\n    setShow(false)\n  }\n  const handleShow = () => setShow(true)\n\n  const renderCategories = (categories) => {\n    let myCategories = []\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children:\n          category.children.length > 0 && renderCategories(category.children),\n      })\n    }\n    return myCategories\n  }\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type,\n      })\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options)\n      }\n    }\n\n    return options\n  }\n\n  const handleCategoryImage = (e) => {\n    setCategoryImage(e.target.files[0])\n  }\n\n  const updateCategory = () => {\n    updateCheckedExpandedCategories()\n    setUpdateCategoryModal(true)\n  }\n\n  const updateCheckedExpandedCategories = () => {\n    const categories = createCategoryList(category.categories)\n    const checkedArray = []\n    const expandedArray = []\n    checked.length > 0 &&\n      checked.forEach((categoryId, index) => {\n        const category = categories.find(\n          (category, _index) => categoryId === category.value\n        )\n\n        //there is maybe a change a catgeory won't match, so just for safety we will have to do this\n        category && checkedArray.push(category)\n      })\n\n    expanded.length > 0 &&\n      expanded.forEach((categoryId, index) => {\n        const category = categories.find(\n          (category, _index) => categoryId === category.value\n        )\n\n        //there is maybe a change a catgeory won't match, so just for safety we will have to do this\n        category && expandedArray.push(category)\n      })\n\n    //these two will help to modify the inputs in edit category\n    setCheckedArray(checkedArray)\n    setExpandedArray(expandedArray)\n  }\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type == 'checked') {\n      const updatedCheckedArray = checkedArray.map((item, _index) =>\n        index == _index ? { ...item, [key]: value } : item\n      )\n      setCheckedArray(updatedCheckedArray)\n    } else if (type == 'expanded') {\n      const updatedExpandedArray = expandedArray.map((item, _index) =>\n        index == _index ? { ...item, [key]: value } : item\n      )\n      setExpandedArray(updatedExpandedArray)\n    }\n  }\n  {\n    /* Edit Categories */\n  }\n\n  const updateCategoriesForm = () => {\n    const form = new FormData()\n    expandedArray.forEach((item, index) => {\n      form.append('_id', item.value)\n      form.append('name', item.name)\n      form.append('parentId', item.parentId ? item.parentId : '')\n      form.append('type', item.type)\n    })\n\n    checkedArray.forEach((item, index) => {\n      form.append('_id', item.value)\n      form.append('name', item.name)\n      form.append('parentId', item.parentId ? item.parentId : '')\n      form.append('type', item.type)\n    })\n\n    dispatch(updateCategories(form)).then((result) => {\n      if (result) {\n        dispatch(getAllCategory())\n      }\n    })\n\n    setUpdateCategoryModal(false)\n  }\n\n  const deleteCategory = () => {\n    updateCheckedExpandedCategories()\n    setDeleteCategoryModal(true)\n  }\n\n  const deleteCategories = () => {\n    //get expandedCategory id\n    const expandedByIdArray = expandedArray.map((item, index) => ({\n      _id: item.value,\n    }))\n\n    //get checkedCategory id\n    const checkedByIdArray = checkedArray.map((item, index) => ({\n      _id: item.value,\n    }))\n\n    //merge the checked and expanded arrays by id\n    const arrayByIds = expandedByIdArray.concat(checkedByIdArray)\n\n    if (checkedArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedArray)).then((result) => {\n        if (result) {\n          dispatch(getAllCategory())\n          setDeleteCategoryModal(false)\n        }\n      })\n    }\n  }\n\n  const renderDeleteCategoryModal = () => {\n    // console.log('delete', checkedArray)\n\n    return (\n      <NewModal\n        modalTitle=\"Confirm\"\n        show={deleteCategoryModal}\n        handleClose={() => setDeleteCategoryModal(false)}\n        buttons={[\n          {\n            label: 'No',\n            color: 'primary',\n            onClick: () => {\n              alert('no')\n            },\n          },\n          {\n            label: 'Yes',\n            color: 'danger',\n            onClick: deleteCategories,\n          },\n        ]}\n      >\n        <h5>Expanded</h5>\n        {expandedArray.map((item, index) => (\n          <span key={index}>{item.name}</span>\n        ))}\n        <h5>Checked</h5>\n        {checkedArray.map((item, index) => (\n          <span key={index}>{item.name}</span>\n        ))}\n      </NewModal>\n    )\n  }\n\n  // const renderAddCategoryModal = () => {\n  //   return (\n  //     <NewModal\n  //       show={show}\n  //       handleClose={handleClose}\n  //       modalTitle={'Add New Category'}\n  //     >\n  //       <Input\n  //         value={categoryName}\n  //         placeholder={'Category Name'}\n  //         onChange={(e) => setCategoryName(e.target.value)}\n  //       />\n  //       <select\n  //         className=\"form-control\"\n  //         value={parentCategoryId}\n  //         onChange={(e) => setParentCategoryId(e.target.value)}\n  //       >\n  //         <option>select category</option>\n  //         {createCategoryList(category.categories).map((option) => (\n  //           <option key={option.value} value={option.value}>\n  //             {option.name}\n  //           </option>\n  //         ))}\n  //       </select>\n  //       <input\n  //         type=\"file\"\n  //         name=\"categoryImage\"\n  //         onChange={handleCategoryImage}\n  //       ></input>\n  //     </NewModal>\n  //   )\n  // }\n\n  const categoryList = createCategoryList(category.categories)\n\n  return (\n    <div>\n      <Layout sidebar>\n        <Container>\n          <Row>\n            <Col md={12}>\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <h3>Category</h3>\n                <button onClick={handleShow}>Add</button>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12}>\n              {/* <ul>{renderCategories(category.categories)}</ul>\n               */}\n\n              <CheckboxTree\n                nodes={renderCategories(category.categories)}\n                checked={checked}\n                expanded={expanded}\n                onCheck={(checked) => setChecked(checked)}\n                onExpand={(expanded) => setExpanded(expanded)}\n                icons={{\n                  check: <IoCheckbox />,\n                  uncheck: <IoIosCheckboxOutline />,\n                  halfCheck: <IoIosCheckboxOutline />,\n                  expandClose: <IoArrowForward />,\n                  expandOpen: <IoArrowDown />,\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <button onClick={deleteCategory}>Delete</button>\n              <button onClick={updateCategory}>Edit</button>\n            </Col>\n          </Row>\n        </Container>\n\n        <AddCategoryModal\n          show={show}\n          handleClose={handleClose}\n          modalTitle={'Add New Category'}\n          categoryName={categoryName}\n          setCategoryName={setCategoryName}\n          parentCategoryId={parentCategoryId}\n          setParentCategoryId={setParentCategoryId}\n          categoryList={categoryList}\n        />\n\n        <UpdateCategoriesModal\n          show={updateCategoryModal}\n          handleClose={updateCategoriesForm}\n          modalTitle={'Update Categories'}\n          size=\"lg\"\n          expandedArray={expandedArray}\n          checkedArray={checkedArray}\n          handleCategoryInput={handleCategoryInput}\n          categoryList={categoryList}\n        />\n\n        {/* {renderAddCategoryModal()} */}\n        {renderDeleteCategoryModal()}\n      </Layout>\n    </div>\n  )\n}\n\nexport default Category\n"]},"metadata":{},"sourceType":"module"}