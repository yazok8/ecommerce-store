{"ast":null,"code":"var _jsxFileName = \"/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/components/container/category/Category.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategory, addCategory } from '../../../actions/actions';\nimport Input from '../../UI/input/Input.ui';\nimport NewModal from '../../UI/modal/modal';\nimport Layout from '../../layouts/header.layout';\nimport CheckboxTree from 'react-checkbox-tree';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const category = useSelector(state => state.category);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryPicture', categoryImage);\n    dispatch(addCategory(form)); // window.location.reload(false)\n\n    setCategoryName('');\n    setParentCategoryId(''); // const cat = {\n    //   categoryName,\n    //   parentCategoryId,\n    //   categoryImage,\n    // }\n    // console.log(cat)\n\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      sidebar: true,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleShow,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n              nodes: renderCategories(category.categories),\n              checked: checked,\n              expanded: expanded,\n              onCheck: checked => setChecked({\n                checked\n              }),\n              onExpand: expanded => setExpanded({\n                expanded\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewModal, {\n        show: show,\n        handleClose: handleClose,\n        modalTitle: 'Add New Category',\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: categoryName,\n          placeholder: 'Category Name',\n          onChange: e => setCategoryName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: parentCategoryId,\n          onChange: e => setParentCategoryId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"categoryImage\",\n          onChange: handleCategoryImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"kBf0avZ5+/v0avbSI0gzjO/SxUc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/components/container/category/Category.js"],"names":["React","useState","useEffect","Col","Container","Row","useDispatch","useSelector","getAllCategory","addCategory","Input","NewModal","Layout","CheckboxTree","Category","props","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","show","setShow","checked","setChecked","expanded","setExpanded","category","state","dispatch","handleClose","form","FormData","append","handleShow","renderCategories","categories","myCategories","push","label","name","value","_id","children","length","createCategoryList","options","parentId","type","handleCategoryImage","e","target","files","display","justifyContent","map","option"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllCategory, addCategory } from '../../../actions/actions'\nimport Input from '../../UI/input/Input.ui'\nimport NewModal from '../../UI/modal/modal'\nimport Layout from '../../layouts/header.layout'\nimport CheckboxTree from 'react-checkbox-tree'\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css'\n\nconst Category = (props) => {\n  const [categoryName, setCategoryName] = useState('')\n  const [parentCategoryId, setParentCategoryId] = useState('')\n  const [categoryImage, setCategoryImage] = useState('')\n  const [show, setShow] = useState(false)\n\n  const [checked, setChecked] = useState([])\n  const [expanded, setExpanded] = useState([])\n  const category = useSelector((state) => state.category)\n  const dispatch = useDispatch()\n\n  const handleClose = () => {\n    const form = new FormData()\n\n    form.append('name', categoryName)\n    form.append('parentId', parentCategoryId)\n    form.append('categoryPicture', categoryImage)\n    dispatch(addCategory(form))\n    // window.location.reload(false)\n    setCategoryName('')\n    setParentCategoryId('')\n    // const cat = {\n    //   categoryName,\n    //   parentCategoryId,\n    //   categoryImage,\n    // }\n\n    // console.log(cat)\n\n    setShow(false)\n  }\n  const handleShow = () => setShow(true)\n\n  const renderCategories = (categories) => {\n    let myCategories = []\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children:\n          category.children.length > 0 && renderCategories(category.children),\n      })\n    }\n    return myCategories\n  }\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type,\n      })\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options)\n      }\n    }\n\n    return options\n  }\n\n  const handleCategoryImage = (e) => {\n    setCategoryImage(e.target.files[0])\n  }\n\n  return (\n    <div>\n      <Layout sidebar>\n        <Container>\n          <Row>\n            <Col md={12}>\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <h3>Category</h3>\n                <button onClick={handleShow}>Add</button>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12}>\n              {/* <ul>{renderCategories(category.categories)}</ul>\n               */}\n\n              <CheckboxTree\n                nodes={renderCategories(category.categories)}\n                checked={checked}\n                expanded={expanded}\n                onCheck={(checked) => setChecked({ checked })}\n                onExpand={(expanded) => setExpanded({ expanded })}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <NewModal\n          show={show}\n          handleClose={handleClose}\n          modalTitle={'Add New Category'}\n        >\n          <Input\n            value={categoryName}\n            placeholder={'Category Name'}\n            onChange={(e) => setCategoryName(e.target.value)}\n          />\n          <select\n            className=\"form-control\"\n            value={parentCategoryId}\n            onChange={(e) => setParentCategoryId(e.target.value)}\n          >\n            <option>select category</option>\n            {createCategoryList(category.categories).map((option) => (\n              <option key={option.value} value={option.value}>\n                {option.name}\n              </option>\n            ))}\n          </select>\n          <input\n            type=\"file\"\n            name=\"categoryImage\"\n            onChange={handleCategoryImage}\n          ></input>\n        </NewModal>\n      </Layout>\n    </div>\n  )\n}\n\nexport default Category\n"]},"metadata":{},"sourceType":"module"}