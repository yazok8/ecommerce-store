{"ast":null,"code":"import axios from '../../helpers/axios';\nimport { LOGIN_REQUEST, LOGIN_REQUEST_SUCCESS } from './auth.types';\nexport const login = (email, password) => async dispatch => {\n  console.log(email, password);\n\n  try {\n    dispatch({\n      type: LOGIN_REQUEST,\n      payload: {\n        email,\n        password\n      }\n    });\n    const config = {\n      Headers: {\n        'content-type': 'application/json'\n      }\n    };\n    const {\n      data,\n      token\n    } = await axios.post('/admin/signin', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_REQUEST_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('token', token);\n  } catch (err) {\n    if (response.status === 400) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: err.response && err.response.data.message ? err.response.data.message : err.message\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/actions/auth/auth.actions.js"],"names":["axios","LOGIN_REQUEST","LOGIN_REQUEST_SUCCESS","login","email","password","dispatch","console","log","type","payload","config","Headers","data","token","post","localStorage","setItem","err","response","status","USER_LOGIN_FAIL","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,SAASC,aAAT,EAAwBC,qBAAxB,QAAqD,cAArD;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmBC,QAAnB;;AACA,MAAI;AACFC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,aADC;AAEPS,MAAAA,OAAO,EAAE;AACPN,QAAAA,KADO;AAEPC,QAAAA;AAFO;AAFF,KAAD,CAAR;AAOA,UAAMM,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkB,MAAMd,KAAK,CAACe,IAAN,CAC5B,eAD4B,EAE5B;AAAEX,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAF4B,EAG5BM,MAH4B,CAA9B;AAKAL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,qBADC;AAEPQ,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAIAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACD,GAvBD,CAuBE,OAAOI,GAAP,EAAY;AACZ,QAAIC,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3Bd,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEY,eADC;AAEPX,QAAAA,OAAO,EACLQ,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaN,IAAb,CAAkBS,OAAlC,GACIJ,GAAG,CAACC,QAAJ,CAAaN,IAAb,CAAkBS,OADtB,GAEIJ,GAAG,CAACI;AALH,OAAD,CAAR;AAOD;AACF;AACF,CApCM","sourcesContent":["import axios from '../../helpers/axios'\nimport { LOGIN_REQUEST, LOGIN_REQUEST_SUCCESS } from './auth.types'\n\nexport const login = (email, password) => async (dispatch) => {\n  console.log(email, password)\n  try {\n    dispatch({\n      type: LOGIN_REQUEST,\n      payload: {\n        email,\n        password,\n      },\n    })\n    const config = {\n      Headers: {\n        'content-type': 'application/json',\n      },\n    }\n    const { data, token } = await axios.post(\n      '/admin/signin',\n      { email, password },\n      config\n    )\n    dispatch({\n      type: LOGIN_REQUEST_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('token', token)\n  } catch (err) {\n    if (response.status === 400) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload:\n          err.response && err.response.data.message\n            ? err.response.data.message\n            : err.message,\n      })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}