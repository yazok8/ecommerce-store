{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_REQUEST_FAIL, LOGIN_REQUEST_SUCCESS } from '../actions/auth/auth.types';\nconst initialState = {\n  token: null,\n  user: {\n    name: '',\n    email: '',\n    picture: ''\n  },\n  authernicate: false,\n  authernicating: false\n};\nexport const authReducer = (state = initialState, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state,\n        authernicating: true\n      };\n\n    case LOGIN_REQUEST_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload,\n        authernicate: true\n      };\n\n    case LOGIN_REQUEST_FAIL:\n      return {\n        loading: false,\n        error: 'Invalid email or password'\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/reducers/auth.reducer.js"],"names":["LOGIN_REQUEST","LOGIN_REQUEST_FAIL","LOGIN_REQUEST_SUCCESS","initialState","token","user","name","email","picture","authernicate","authernicating","authReducer","state","action","console","log","type","loading","userInfo","payload","error"],"mappings":"AAAA,SACEA,aADF,EAEEC,kBAFF,EAGEC,qBAHF,QAIO,4BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,EADF;AAEJC,IAAAA,KAAK,EAAE,EAFH;AAGJC,IAAAA,OAAO,EAAE;AAHL,GAFa;AAOnBC,EAAAA,YAAY,EAAE,KAPK;AAQnBC,EAAAA,cAAc,EAAE;AARG,CAArB;AAWA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKhB,aAAL;AACE,aAAO,EAAE,GAAGY,KAAL;AAAYF,QAAAA,cAAc,EAAE;AAA5B,OAAP;;AAEF,SAAKR,qBAAL;AACE,aAAO;AAAEe,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,QAAQ,EAAEL,MAAM,CAACM,OAAnC;AAA4CV,QAAAA,YAAY,EAAE;AAA1D,OAAP;;AAEF,SAAKR,kBAAL;AACE,aAAO;AAAEgB,QAAAA,OAAO,EAAE,KAAX;AAAkBG,QAAAA,KAAK,EAAE;AAAzB,OAAP;;AAEF;AACE,aAAOR,KAAP;AAXJ;AAaD,CAfM","sourcesContent":["import {\n  LOGIN_REQUEST,\n  LOGIN_REQUEST_FAIL,\n  LOGIN_REQUEST_SUCCESS,\n} from '../actions/auth/auth.types'\n\nconst initialState = {\n  token: null,\n  user: {\n    name: '',\n    email: '',\n    picture: '',\n  },\n  authernicate: false,\n  authernicating: false,\n}\n\nexport const authReducer = (state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state, authernicating: true }\n\n    case LOGIN_REQUEST_SUCCESS:\n      return { loading: false, userInfo: action.payload, authernicate: true }\n\n    case LOGIN_REQUEST_FAIL:\n      return { loading: false, error: 'Invalid email or password' }\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}