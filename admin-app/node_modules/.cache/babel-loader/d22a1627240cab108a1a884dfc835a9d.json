{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers/rootReducer'; //calling cartItems from cart.actions\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst adminInfoFromStorage = localStorage.getItem('adminInfo') ? JSON.parse(localStorage.getItem('adminnfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  adminLogin: {\n    adminInfo: adminInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/store.js"],"names":["createStore","applyMiddleware","thunk","composeWithDevTools","rootReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","adminInfoFromStorage","initialState","cart","cartItems","adminLogin","adminInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,wBAAxB,C,CAEA;;AACA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,oBAAoB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADyB,GAEzB,IAFJ;AAIA,MAAMI,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAS,EAAER;AAAb,GADa;AAEnBS,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAEL;AAAb;AAFO,CAArB;AAKA,MAAMM,UAAU,GAAG,CAACd,KAAD,CAAnB;AAEA,MAAMe,KAAK,GAAGjB,WAAW,CACvBI,WADuB,EAEvBO,YAFuB,EAGvBR,mBAAmB,CAACF,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers/rootReducer'\n\n//calling cartItems from cart.actions\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst adminInfoFromStorage = localStorage.getItem('adminInfo')\n  ? JSON.parse(localStorage.getItem('adminnfo'))\n  : null\n\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage },\n  adminLogin: { adminInfo: adminInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}