{"ast":null,"code":"import axios from '../../helpers/axios';\nimport { LOGIN_REQUEST, LOGIN_REQUEST_FAIL, LOGIN_REQUEST_SUCCESS } from './auth.types';\nexport const login = user => async dispatch => {\n  console.log(user);\n  dispatch({\n    type: LOGIN_REQUEST\n  });\n  const res = await axios.post('/admin/signin', { ...user\n  });\n\n  if (res.status === 200) {\n    const {\n      token,\n      user\n    } = res.data;\n    localStorage.setItem('token', token);\n    dispatch({\n      type: LOGIN_REQUEST_SUCCESS,\n      payload: token,\n      user\n    });\n  } // const config = {\n  //   Headers: {\n  //     'content-type': 'application/json',\n  //   },\n  // }\n  else {\n      if (res === 400) {\n        dispatch({\n          type: LOGIN_REQUEST_FAIL,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      dispatch({\n        payload: {\n          token\n        }\n      });\n    } else {\n      dispatch({\n        payload: {\n          authenticate: false,\n          message: 'user needs to login '\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/actions/auth/auth.actions.js"],"names":["axios","LOGIN_REQUEST","LOGIN_REQUEST_FAIL","LOGIN_REQUEST_SUCCESS","login","user","dispatch","console","log","type","res","post","status","token","data","localStorage","setItem","payload","error","isUserLoggedIn","getItem","authenticate","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,SACEC,aADF,EAEEC,kBAFF,EAGEC,qBAHF,QAIO,cAJP;AAMA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAC,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAER;AADC,GAAD,CAAR;AAGA,QAAMS,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,eAAX,EAA4B,EAC5C,GAAGN;AADyC,GAA5B,CAAlB;;AAIA,MAAIK,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,UAAM;AAAEC,MAAAA,KAAF;AAASR,MAAAA;AAAT,QAAkBK,GAAG,CAACI,IAA5B;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AAEAP,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,qBADC;AAEPc,MAAAA,OAAO,EAAEJ,KAFF;AAGPR,MAAAA;AAHO,KAAD,CAAR;AAKD,GATD,CAWA;AACA;AACA;AACA;AACA;AAfA,OAgBK;AACH,UAAIK,GAAG,KAAK,GAAZ,EAAiB;AACfJ,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAEP,kBADC;AAEPe,UAAAA,OAAO,EAAE;AAAEC,YAAAA,KAAK,EAAER,GAAG,CAACI,IAAJ,CAASI;AAAlB;AAFF,SAAD,CAAR;AAID;AACF;AACF,CAlCM;AAoCP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAO,MAAOb,QAAP,IAAoB;AACzB,UAAMO,KAAK,GAAGE,YAAY,CAACK,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIP,KAAJ,EAAW;AACTP,MAAAA,QAAQ,CAAC;AACPW,QAAAA,OAAO,EAAE;AACPJ,UAAAA;AADO;AADF,OAAD,CAAR;AAKD,KAND,MAMO;AACLP,MAAAA,QAAQ,CAAC;AACPW,QAAAA,OAAO,EAAE;AACPI,UAAAA,YAAY,EAAE,KADP;AAEPC,UAAAA,OAAO,EAAE;AAFF;AADF,OAAD,CAAR;AAMD;AACF,GAhBD;AAiBD,CAlBM","sourcesContent":["import axios from '../../helpers/axios'\nimport {\n  LOGIN_REQUEST,\n  LOGIN_REQUEST_FAIL,\n  LOGIN_REQUEST_SUCCESS,\n} from './auth.types'\n\nexport const login = (user) => async (dispatch) => {\n  console.log(user)\n\n  dispatch({\n    type: LOGIN_REQUEST,\n  })\n  const res = await axios.post('/admin/signin', {\n    ...user,\n  })\n\n  if (res.status === 200) {\n    const { token, user } = res.data\n    localStorage.setItem('token', token)\n\n    dispatch({\n      type: LOGIN_REQUEST_SUCCESS,\n      payload: token,\n      user,\n    })\n  }\n\n  // const config = {\n  //   Headers: {\n  //     'content-type': 'application/json',\n  //   },\n  // }\n  else {\n    if (res === 400) {\n      dispatch({\n        type: LOGIN_REQUEST_FAIL,\n        payload: { error: res.data.error },\n      })\n    }\n  }\n}\n\nexport const isUserLoggedIn = () => {\n  return async (dispatch) => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      dispatch({\n        payload: {\n          token,\n        },\n      })\n    } else {\n      dispatch({\n        payload: {\n          authenticate: false,\n          message: 'user needs to login ',\n        },\n      })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}