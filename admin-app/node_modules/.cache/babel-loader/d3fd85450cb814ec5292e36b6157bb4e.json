{"ast":null,"code":"import axios from 'axios';\nimport { api } from '../urlConfig';\nconst token = window.localStorage.getItem('token');\nconst axiosInstance = axios.create({\n  baseURL: api,\n  header: {\n    //   'Accept-Version': 1,\n    ' Authorization': token ? `Bearer ${token}` : '' //   Accept: 'application/json',\n    //   'Access-Control-Allow-Origin': '*',\n    //   'Content-Type': 'application/json; charset=utf-8',\n\n  }\n});\nconst UNAUTHORIZED = 401;\naxios.interceptors.response.use(response => response, error => {\n  const {\n    status\n  } = error.response;\n\n  if (status === UNAUTHORIZED) {\n    dispatch(userSignOut());\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"sources":["/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/helpers/axios.js"],"names":["axios","api","token","window","localStorage","getItem","axiosInstance","create","baseURL","header","UNAUTHORIZED","interceptors","response","use","error","status","dispatch","userSignOut","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AAEA,MAAMC,aAAa,GAAGN,KAAK,CAACO,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAEP,GADwB;AAEjCQ,EAAAA,MAAM,EAAE;AACN;AACA,sBAAkBP,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB,EAFxC,CAGN;AACA;AACA;;AALM;AAFyB,CAAb,CAAtB;AAWA,MAAMQ,YAAY,GAAG,GAArB;AACAV,KAAK,CAACW,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACGD,QAAD,IAAcA,QADhB,EAEGE,KAAD,IAAW;AACT,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAK,CAACF,QAAzB;;AACA,MAAIG,MAAM,KAAKL,YAAf,EAA6B;AAC3BM,IAAAA,QAAQ,CAACC,WAAW,EAAZ,CAAR;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeL,KAAf,CAAP;AACD,CARH;AAWA,eAAeR,aAAf","sourcesContent":["import axios from 'axios'\nimport { api } from '../urlConfig'\n\nconst token = window.localStorage.getItem('token')\n\nconst axiosInstance = axios.create({\n  baseURL: api,\n  header: {\n    //   'Accept-Version': 1,\n    ' Authorization': token ? `Bearer ${token}` : '',\n    //   Accept: 'application/json',\n    //   'Access-Control-Allow-Origin': '*',\n    //   'Content-Type': 'application/json; charset=utf-8',\n  },\n})\n\nconst UNAUTHORIZED = 401\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    const { status } = error.response\n    if (status === UNAUTHORIZED) {\n      dispatch(userSignOut())\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default axiosInstance\n"]},"metadata":{},"sourceType":"module"}