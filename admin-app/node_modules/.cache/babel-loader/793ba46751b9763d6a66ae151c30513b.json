{"ast":null,"code":"import axios from 'axios';\nimport { api } from '../urlConfig';\nimport { LOGOUT_REQUEST_SUCCESS } from '../actions/auth/auth.types';\nimport store from '../store';\nconst token = window.localStorage.getItem('token');\nconst axiosInstance = axios.create({\n  baseURL: api,\n  headers: {\n    Authorization: token ? `Bearer ${token}` : ''\n  }\n});\naxiosIntance.interceptors.request.use(req => {\n  const {\n    auth\n  } = store.getState();\n\n  if (auth.token) {\n    req.headers.Authorization = `Bearer ${auth.token}`;\n  }\n\n  return req;\n});\naxiosIntance.interceptors.response.use(res => {\n  return res;\n}, error => {\n  console.log(error.response);\n  const status = error.response ? error.response.status : 500;\n\n  if (status && status === 500) {\n    localStorage.clear();\n    store.dispatch({\n      type: LOGOUT_REQUEST_SUCCESS\n    });\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"sources":["/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/helpers/axios.js"],"names":["axios","api","LOGOUT_REQUEST_SUCCESS","store","token","window","localStorage","getItem","axiosInstance","create","baseURL","headers","Authorization","axiosIntance","interceptors","request","use","req","auth","getState","response","res","error","console","log","status","clear","dispatch","type","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,sBAAT,QAAuC,4BAAvC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AAEA,MAAMC,aAAa,GAAGR,KAAK,CAACS,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAET,GADwB;AAEjCU,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAER,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADpC;AAFwB,CAAb,CAAtB;AAOAS,YAAY,CAACC,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CAAuCC,GAAD,IAAS;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAWf,KAAK,CAACgB,QAAN,EAAjB;;AACA,MAAID,IAAI,CAACd,KAAT,EAAgB;AACda,IAAAA,GAAG,CAACN,OAAJ,CAAYC,aAAZ,GAA6B,UAASM,IAAI,CAACd,KAAM,EAAjD;AACD;;AACD,SAAOa,GAAP;AACD,CAND;AAQAJ,YAAY,CAACC,YAAb,CAA0BM,QAA1B,CAAmCJ,GAAnC,CACGK,GAAD,IAAS;AACP,SAAOA,GAAP;AACD,CAHH,EAIGC,KAAD,IAAW;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,QAAlB;AACA,QAAMK,MAAM,GAAGH,KAAK,CAACF,QAAN,GAAiBE,KAAK,CAACF,QAAN,CAAeK,MAAhC,GAAyC,GAAxD;;AACA,MAAIA,MAAM,IAAIA,MAAM,KAAK,GAAzB,EAA8B;AAC5BnB,IAAAA,YAAY,CAACoB,KAAb;AACAvB,IAAAA,KAAK,CAACwB,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAE1B;AAAR,KAAf;AACD;;AACD,SAAO2B,OAAO,CAACC,MAAR,CAAeR,KAAf,CAAP;AACD,CAZH;AAcA,eAAed,aAAf","sourcesContent":["import axios from 'axios'\nimport { api } from '../urlConfig'\nimport { LOGOUT_REQUEST_SUCCESS } from '../actions/auth/auth.types'\nimport store from '../store'\n\nconst token = window.localStorage.getItem('token')\n\nconst axiosInstance = axios.create({\n  baseURL: api,\n  headers: {\n    Authorization: token ? `Bearer ${token}` : '',\n  },\n})\n\naxiosIntance.interceptors.request.use((req) => {\n  const { auth } = store.getState()\n  if (auth.token) {\n    req.headers.Authorization = `Bearer ${auth.token}`\n  }\n  return req\n})\n\naxiosIntance.interceptors.response.use(\n  (res) => {\n    return res\n  },\n  (error) => {\n    console.log(error.response)\n    const status = error.response ? error.response.status : 500\n    if (status && status === 500) {\n      localStorage.clear()\n      store.dispatch({ type: LOGOUT_REQUEST_SUCCESS })\n    }\n    return Promise.reject(error)\n  }\n)\nexport default axiosInstance\n"]},"metadata":{},"sourceType":"module"}