{"ast":null,"code":"import { ADD_NEW_CATEGORY_FAIL, ADD_NEW_CATEGORY_REQUEST, ADD_NEW_CATEGORY_SUCCESS, GET_ALL_CATEGORIES_SUCCESS } from '../actions/category/catergory.types';\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategories = (id, categories, category) => {\n  let myCategories = [];\n\n  for (let cat of categories) {\n    if (cat.parentId && cat.parentId === id) {\n      myCategories.push({ ...cat,\n        children: cat.children && cat.children.length > 0 ? buildNewCategories(id, [...cat.children, {\n          _id: category._id,\n          name: category.name,\n          slug: category.slug,\n          parentId: category.parentId,\n          children: category.children\n        }], category) : []\n      });\n    } else {\n      myCategories.push({ ...cat,\n        children: cat.children && cat.children.length > 0 ? buildNewCategories(cat.children, category) : []\n      });\n    }\n  }\n\n  return myCategories;\n};\n\nexport const categoryReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_ALL_CATEGORIES_SUCCESS:\n      return { ...state,\n        categories: action.payload.categories,\n        loading: false\n      };\n\n    case ADD_NEW_CATEGORY_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case ADD_NEW_CATEGORY_SUCCESS:\n      const category = action.payload.category;\n      const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n      console.log('updated categories', updatedCategories);\n      return { ...state,\n        categories: updatedCategories,\n        loading: false\n      };\n\n    case ADD_NEW_CATEGORY_FAIL:\n      return { ...initState,\n        error: action.payload.error\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/reducers/categoriy.reducer.js"],"names":["ADD_NEW_CATEGORY_FAIL","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","GET_ALL_CATEGORIES_SUCCESS","initState","categories","loading","error","buildNewCategories","id","category","myCategories","cat","parentId","push","children","length","_id","name","slug","categoryReducer","state","action","type","payload","updatedCategories","console","log"],"mappings":"AAAA,SACEA,qBADF,EAEEC,wBAFF,EAGEC,wBAHF,EAIEC,0BAJF,QAKO,qCALP;AAOA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,EADI;AAEhBC,EAAAA,OAAO,EAAE,KAFO;AAGhBC,EAAAA,KAAK,EAAE;AAHS,CAAlB;;AAMA,MAAMC,kBAAkB,GAAG,CAACC,EAAD,EAAKJ,UAAL,EAAiBK,QAAjB,KAA8B;AACvD,MAAIC,YAAY,GAAG,EAAnB;;AAEA,OAAK,IAAIC,GAAT,IAAgBP,UAAhB,EAA4B;AAC1B,QAAIO,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,KAAiBJ,EAArC,EAAyC;AACvCE,MAAAA,YAAY,CAACG,IAAb,CAAkB,EAChB,GAAGF,GADa;AAEhBG,QAAAA,QAAQ,EACNH,GAAG,CAACG,QAAJ,IAAgBH,GAAG,CAACG,QAAJ,CAAaC,MAAb,GAAsB,CAAtC,GACIR,kBAAkB,CAChBC,EADgB,EAEhB,CACE,GAAGG,GAAG,CAACG,QADT,EAEE;AACEE,UAAAA,GAAG,EAAEP,QAAQ,CAACO,GADhB;AAEEC,UAAAA,IAAI,EAAER,QAAQ,CAACQ,IAFjB;AAGEC,UAAAA,IAAI,EAAET,QAAQ,CAACS,IAHjB;AAIEN,UAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAJrB;AAKEE,UAAAA,QAAQ,EAAEL,QAAQ,CAACK;AALrB,SAFF,CAFgB,EAYhBL,QAZgB,CADtB,GAeI;AAlBU,OAAlB;AAoBD,KArBD,MAqBO;AACLC,MAAAA,YAAY,CAACG,IAAb,CAAkB,EAChB,GAAGF,GADa;AAEhBG,QAAAA,QAAQ,EACNH,GAAG,CAACG,QAAJ,IAAgBH,GAAG,CAACG,QAAJ,CAAaC,MAAb,GAAsB,CAAtC,GACIR,kBAAkB,CAACI,GAAG,CAACG,QAAL,EAAeL,QAAf,CADtB,GAEI;AALU,OAAlB;AAOD;AACF;;AAED,SAAOC,YAAP;AACD,CArCD;;AAuCA,OAAO,MAAMS,eAAe,GAAG,CAACC,KAAK,GAAGjB,SAAT,EAAoBkB,MAApB,KAA+B;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKpB,0BAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELhB,QAAAA,UAAU,EAAEiB,MAAM,CAACE,OAAP,CAAenB,UAFtB;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,wBAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELf,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKJ,wBAAL;AACE,YAAMQ,QAAQ,GAAGY,MAAM,CAACE,OAAP,CAAed,QAAhC;AACA,YAAMe,iBAAiB,GAAGjB,kBAAkB,CAC1CE,QAAQ,CAACG,QADiC,EAE1CQ,KAAK,CAAChB,UAFoC,EAG1CK,QAH0C,CAA5C;AAKAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,iBAAlC;AACA,aAAO,EACL,GAAGJ,KADE;AAELhB,QAAAA,UAAU,EAAEoB,iBAFP;AAGLnB,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKN,qBAAL;AACE,aAAO,EACL,GAAGI,SADE;AAELG,QAAAA,KAAK,EAAEe,MAAM,CAACE,OAAP,CAAejB;AAFjB,OAAP;;AAKF;AACE,aAAOc,KAAP;AAlCJ;AAoCD,CArCM","sourcesContent":["import {\n  ADD_NEW_CATEGORY_FAIL,\n  ADD_NEW_CATEGORY_REQUEST,\n  ADD_NEW_CATEGORY_SUCCESS,\n  GET_ALL_CATEGORIES_SUCCESS,\n} from '../actions/category/catergory.types'\n\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null,\n}\n\nconst buildNewCategories = (id, categories, category) => {\n  let myCategories = []\n\n  for (let cat of categories) {\n    if (cat.parentId && cat.parentId === id) {\n      myCategories.push({\n        ...cat,\n        children:\n          cat.children && cat.children.length > 0\n            ? buildNewCategories(\n                id,\n                [\n                  ...cat.children,\n                  {\n                    _id: category._id,\n                    name: category.name,\n                    slug: category.slug,\n                    parentId: category.parentId,\n                    children: category.children,\n                  },\n                ],\n                category\n              )\n            : [],\n      })\n    } else {\n      myCategories.push({\n        ...cat,\n        children:\n          cat.children && cat.children.length > 0\n            ? buildNewCategories(cat.children, category)\n            : [],\n      })\n    }\n  }\n\n  return myCategories\n}\n\nexport const categoryReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_ALL_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        categories: action.payload.categories,\n        loading: false,\n      }\n    case ADD_NEW_CATEGORY_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n\n    case ADD_NEW_CATEGORY_SUCCESS:\n      const category = action.payload.category\n      const updatedCategories = buildNewCategories(\n        category.parentId,\n        state.categories,\n        category\n      )\n      console.log('updated categories', updatedCategories)\n      return {\n        ...state,\n        categories: updatedCategories,\n        loading: false,\n      }\n\n    case ADD_NEW_CATEGORY_FAIL:\n      return {\n        ...initState,\n        error: action.payload.error,\n      }\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}