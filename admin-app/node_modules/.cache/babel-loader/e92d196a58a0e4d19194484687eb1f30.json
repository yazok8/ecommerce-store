{"ast":null,"code":"import axios from '../../helpers/axios';\nimport { GET_ALL_CATEGORIES_FAIL, GET_ALL_CATEGORIES_REQUEST, GET_ALL_CATEGORIES_SUCCESS } from './catergory.types';\nexport const getAllCategory = () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_ALL_CATEGORIES_REQUEST\n    });\n    console.log('Category.js');\n    const res = await axios.get('category/getCategory');\n    console.log(res);\n    const {\n      categoryList\n    } = res.data;\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_ALL_CATEGORIES_SUCCESS,\n        payload: {\n          categories: categoryList\n        }\n      });\n    } else {\n      dispatch({\n        type: GET_ALL_CATEGORIES_FAIL,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\nexport const addCategory = form => {\n  return async (dispatch, getState) => {\n    const {\n      auth: {\n        user\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${user.token}`\n      }\n    };\n    const res = await axios.post('/category/create', {\n      headers: {\n        Authorization: `token ${token}`\n      }\n    }, form, config);\n    console.log(res);\n  };\n};","map":{"version":3,"sources":["/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/actions/category/category.action.js"],"names":["axios","GET_ALL_CATEGORIES_FAIL","GET_ALL_CATEGORIES_REQUEST","GET_ALL_CATEGORIES_SUCCESS","getAllCategory","dispatch","type","console","log","res","get","categoryList","data","status","payload","categories","error","addCategory","form","getState","auth","user","config","headers","Authorization","token","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,SACEC,uBADF,EAEEC,0BAFF,EAGEC,0BAHF,QAIO,mBAJP;AAMA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAR;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,sBAAV,CAAlB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AAEA,UAAM;AAAEE,MAAAA;AAAF,QAAmBF,GAAG,CAACG,IAA7B;;AAEA,QAAIH,GAAG,CAACI,MAAJ,KAAe,GAAnB,EAAwB;AACtBR,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH,0BADC;AAEPW,QAAAA,OAAO,EAAE;AAAEC,UAAAA,UAAU,EAAEJ;AAAd;AAFF,OAAD,CAAR;AAID,KALD,MAKO;AACLN,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,uBADC;AAEPa,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAAEP,GAAG,CAACG,IAAJ,CAASI;AAAlB;AAFF,OAAD,CAAR;AAID;AACF,GApBD;AAqBD,CAtBM;AAwBP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO,OAAOb,QAAP,EAAiBc,QAAjB,KAA8B;AACnC,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADF,QAEFF,QAAQ,EAFZ;AAGA,UAAMG,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,IAAI,CAACI,KAAM;AAF7B;AADI,KAAf;AAMA,UAAMhB,GAAG,GAAG,MAAMT,KAAK,CAAC0B,IAAN,CAChB,kBADgB,EAEhB;AACEH,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,SAAQC,KAAM;AADvB;AADX,KAFgB,EAOhBP,IAPgB,EAQhBI,MARgB,CAAlB;AAUAf,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD,GArBD;AAsBD,CAvBM","sourcesContent":["import axios from '../../helpers/axios'\nimport {\n  GET_ALL_CATEGORIES_FAIL,\n  GET_ALL_CATEGORIES_REQUEST,\n  GET_ALL_CATEGORIES_SUCCESS,\n} from './catergory.types'\n\nexport const getAllCategory = () => {\n  return async (dispatch) => {\n    dispatch({ type: GET_ALL_CATEGORIES_REQUEST })\n\n    console.log('Category.js')\n    const res = await axios.get('category/getCategory')\n    console.log(res)\n\n    const { categoryList } = res.data\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_ALL_CATEGORIES_SUCCESS,\n        payload: { categories: categoryList },\n      })\n    } else {\n      dispatch({\n        type: GET_ALL_CATEGORIES_FAIL,\n        payload: { error: res.data.error },\n      })\n    }\n  }\n}\n\nexport const addCategory = (form) => {\n  return async (dispatch, getState) => {\n    const {\n      auth: { user },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${user.token}`,\n      },\n    }\n    const res = await axios.post(\n      '/category/create',\n      {\n        headers: {\n          Authorization: `token ${token}`,\n        },\n      },\n      form,\n      config\n    )\n    console.log(res)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}