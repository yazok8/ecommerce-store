{"ast":null,"code":"import axios from '../../helpers/axios';\nimport { LOGIN_REQUEST, LOGIN_REQUEST_SUCCESS } from './auth.types';\nexport const login = (email, password) => async dispatch => {\n  console.log(email, password);\n\n  try {\n    dispatch({\n      type: LOGIN_REQUEST,\n      payload: {\n        email,\n        password\n      }\n    });\n    const config = {\n      Headers: {\n        'content-type': 'application/json'\n      }\n    };\n\n    if (res.status === 200) {\n      const {\n        data,\n        token\n      } = await axios.post('/admin/signin', {\n        email,\n        password\n      }, config);\n      dispatch({\n        type: LOGIN_REQUEST_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('token', token);\n    }\n  } catch (err) {\n    if (res.status === 400) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: err.response && err.response.data.message ? err.response.data.message : err.message\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/yazkh/Documents/WebDevelopment/ZingVibesWeb/admin-app/src/actions/auth/auth.actions.js"],"names":["axios","LOGIN_REQUEST","LOGIN_REQUEST_SUCCESS","login","email","password","dispatch","console","log","type","payload","config","Headers","res","status","data","token","post","localStorage","setItem","err","USER_LOGIN_FAIL","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,SAASC,aAAT,EAAwBC,qBAAxB,QAAqD,cAArD;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmBC,QAAnB;;AACA,MAAI;AACFC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,aADC;AAEPS,MAAAA,OAAO,EAAE;AACPN,QAAAA,KADO;AAEPC,QAAAA;AAFO;AAFF,KAAD,CAAR;AAOA,UAAMM,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAIC,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkB,MAAMhB,KAAK,CAACiB,IAAN,CAC5B,eAD4B,EAE5B;AAAEb,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAF4B,EAG5BM,MAH4B,CAA9B;AAKAL,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEP,qBADC;AAEPQ,QAAAA,OAAO,EAAEK;AAFF,OAAD,CAAR;AAIAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACD;AACF,GAzBD,CAyBE,OAAOI,GAAP,EAAY;AACZ,QAAIP,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBR,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEY,eADC;AAEPX,QAAAA,OAAO,EACLU,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaP,IAAb,CAAkBQ,OAAlC,GACIH,GAAG,CAACE,QAAJ,CAAaP,IAAb,CAAkBQ,OADtB,GAEIH,GAAG,CAACG;AALH,OAAD,CAAR;AAOD;AACF;AACF,CAtCM","sourcesContent":["import axios from '../../helpers/axios'\nimport { LOGIN_REQUEST, LOGIN_REQUEST_SUCCESS } from './auth.types'\n\nexport const login = (email, password) => async (dispatch) => {\n  console.log(email, password)\n  try {\n    dispatch({\n      type: LOGIN_REQUEST,\n      payload: {\n        email,\n        password,\n      },\n    })\n    const config = {\n      Headers: {\n        'content-type': 'application/json',\n      },\n    }\n    if (res.status === 200) {\n      const { data, token } = await axios.post(\n        '/admin/signin',\n        { email, password },\n        config\n      )\n      dispatch({\n        type: LOGIN_REQUEST_SUCCESS,\n        payload: data,\n      })\n      localStorage.setItem('token', token)\n    }\n  } catch (err) {\n    if (res.status === 400) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload:\n          err.response && err.response.data.message\n            ? err.response.data.message\n            : err.message,\n      })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}